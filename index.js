/* empty css                      */import{a as L,i as p,S as v}from"./assets/vendor-DEenWwFD.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))c(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&c(i)}).observe(document,{childList:!0,subtree:!0});function o(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(t){if(t.ep)return;t.ep=!0;const r=o(t);fetch(t.href,r)}})();const q="37013770-4fd46202a1ea52ee31e31a9bd",m=(s,e)=>{const o={params:{key:q,q:s,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:e}};return L.get("https://pixabay.com/api/",o)},f=s=>s.map(({webformatURL:e,largeImageURL:o,tags:c,likes:t,views:r,comments:i,downloads:b})=>`<a href="${o}" class="gallery-link">
    <div class="card">
    <img src="${e}" alt="${c}" loading="lazy" width="360" />
    <div class="card-info">
      <p class="card-info-item">Likes<span>${t}</span></p>
      <p class="card-info-item">Views<span>${r}</span></p>
      <p class="card-info-item">Comments<span>${i}</span></p>
      <p class="card-info-item">Downloads<span>${b}</span></p>
    </div>
    </div>
    </a>`).join(""),h=document.querySelector(".form-search"),u=document.querySelector(".gallery"),a=document.querySelector(".loader"),n=document.querySelector(".load-more-btn");let l=1,d="",y;a.style.display="none";const w=async s=>{if(s.preventDefault(),u.innerHTML="",d=s.currentTarget.elements.user_query.value.trim(),l=1,n.classList.add("is-hidden"),a.style.display="block",d===""){p.warning({title:"Warning",position:"topRight",message:"Please enter a search query!"}),a.style.display="none";return}a.style.display="block";try{const{data:e}=await m(d,l);if(!e.hits.length){p.error({title:"Error",position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"});return}const o=f(e.hits);u.insertAdjacentHTML("beforeend",o),y=new v(".gallery-link",{captions:!0,captionsData:"alt",captionDelay:250}),y.refresh(),h.reset(),e.totalHits>1&&(n.classList.remove("is-hidden"),n.addEventListener("click",g))}catch(e){console.log(e)}finally{a.style.display="none"}};h.addEventListener("submit",w);const g=async s=>{a.style.display="block",l++;try{const{data:e}=await m(d,l);a.style.display="none";const o=f(e.hits);u.insertAdjacentHTML("beforeend",o),y.refresh(),l*15>=e.totalHits&&(p.info({title:"Info",position:"topRight",message:"We're sorry, but you've reached the end of search results."}),n.classList.add("is-hidden"),n.removeEventListener("click",g)),k()}catch{p.error({title:"Error",position:"topRight",message:"Failed to load images. Please try again later."})}},k=()=>{const{height:s}=u.getBoundingClientRect();window.scrollBy({top:s*2,behavior:"smooth"})};
//# sourceMappingURL=index.js.map
